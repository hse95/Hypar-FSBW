<?xml version="1.0" encoding="UTF-8" ?>
<case>
    <casedef>
        <constantsdef>            
            <gravity x="0" y="0" z="-9.81" comment="Gravitational acceleration" units_comment="m/s^2" />
            <rhop0 value="1000" comment="Reference density of the fluid" units_comment="kg/m^3" />
            <rhopgradient value="2" comment="Initial density gradient 1:Rhop0, 2:Water column, 3:Max. water height (default=2)" />
            <hswl value="0" auto="true" comment="Maximum still water level to calculate speedofsound using coefsound" units_comment="metres (m)" />
            <gamma value="7" comment="Polytropic constant for water used in the state equation" />
            <speedsystem value="0" auto="true" comment="Maximum system speed (by default the dam-break propagation is used)" />
            <coefsound value="20" comment="Coefficient to multiply speedsystem" />
            <speedsound value="0" auto="true" comment="Speed of sound to use in the simulation (by default speedofsound=coefsound*speedsystem)" />
            <coefh value="1.2" comment="Coefficient to calculate the smoothing length (h=coefh*sqrt(3*dp^2) in 3D)" />
            <cflnumber value="0.2" comment="Coefficient to multiply dt" />
			<!-- Added from previous version -->
			<h value="0.0" auto="true" units_comment="metres (m)" />
            <b value="0.0" auto="true" units_comment="Pascal (Pa)" />
        </constantsdef>
        <mkconfig boundcount="230" fluidcount="9">
            <mkorientfluid mk="0" orient="Xyz" />
        </mkconfig>
        <geometry>
            <definition dp="0.10">
                <pointref x="0" y="0" z="0" />
                <pointmin x="-30" y="-10" z="-5" />
                <pointmax x="350" y="10" z="30" />
            </definition>
            <commands>
                <list name="Tank" printcall="false">
                    <drawextrude closed="false">
                        <extrude x="#tankx1-tankx0" y="0" z="0" />
                        <point x="#tankx0" y="#tanky0+vd" z="#tankz2" />
                        <point x="#tankx0" y="#tanky0+vd" z="#tankz0+vd" />
                        <point x="#tankx0" y="#tanky0+tanksy-vd" z="#tankz0+vd" />
                        <point x="#tankx0" y="#tanky0+tanksy-vd" z="#tankz2" />
                    </drawextrude>
                    <drawextrude closed="false">
                        <extrude x="#tankx2-tankx1" y="0" z="#tankz2-tankz1" />
                        <point x="#tankx1" y="#tanky0+vd" z="#tankz2" />
                        <point x="#tankx1" y="#tanky0+vd" z="#tankz0+vd" />
                        <point x="#tankx1" y="#tanky0+tanksy-vd" z="#tankz0+vd" />
                        <point x="#tankx1" y="#tanky0+tanksy-vd" z="#tankz2" />
                    </drawextrude>
					<setvar vd="vd+vdsum" />
                </list>
				<!-- Geometry for Normals -->
				<list name="GeometryForNormals">
                    <setactive drawpoints="0" drawshapes="1" />
                    <setshapemode>actual | bound</setshapemode>
                    <!-- Breakwater -->
                    <setmkbound mk="5" />
                    <drawfilestl file="BW.stl" autofill="true" advanced="false">
					    <drawmove x="0" y="0" z="#Move_Z" />
                        <drawscale x="1" y="1" z="1" />
                    </drawfilestl>
                    <shapeout file="hdp" />
                    <resetdraw />
                </list>
                <mainlist>
                    <!-- Definition parameters -->
                    <!-- ===================== -->
                    <newvarcte hdp="Dp*0.5" />
                    <newvarcte tanksy="5.02" tanksz="29" _rem="Width and height of tank" />
                    <newvarcte tanky0="-tanksy/2" _rem="Y position of front wall of tank" />
                    <newvarcte tankx0="-20" tankz0="0.0" _rem="First position of tank" />
                    <newvarcte tankx1="60" tankz1="0.0" _rem="End of flat position of tank" />
                    <newvarcte tankx2="350" tankz2="tanksz" _rem="End of beack position of tank" />
					<!-- Wave Information -->
					<!-- ################ -->
					<!-- ################ -->
					<newvarcte Wave_Period="3" />
					<newvarcte Wave_Height="1.8" />
					<newvarcte Move_Z  = "0" />
					<!-- ################ -->
					<!-- ################ -->
					<!-- ################ -->
					<exportvar vars="hdp, Wave_Period, Wave_Height, Move_Z" />

                    <!-- Actual geometry at dp/2 -->
                    <runlist name="GeometryForNormals" />

                    <!-- Particle generation -->
                    <!-- ======================== -->
                    <setshapemode>actual | bound</setshapemode>
                    <setdrawmode mode="full" />
                    <!-- Tank -->
                    <setmkbound mk="6" />
                    <newvar vd="Dp*0.5" vdsum="0" _rem="Variables for list Tank" />
					<setvar vd="0" vdsum="-Dp" _rem="Variables for list Tank" />
                    <setfrdrawmode auto="true" />
					<runlist name="Tank" times="3" />
                    <!-- Piston -->
                    <setmkbound mk="10" />
                    <drawbox>
                        <boxfill>solid</boxfill>
                        <point x="#-5*Dp" y="#tanky0+Dp" z="#Dp" />
                        <size x="#5*Dp" y="#tanksy-2*Dp" z="#tankz2-2*Dp" />
                    </drawbox>
                    <setfrdrawmode auto="false" />
					<!-- Breakwater -->
                    <setmkbound mk="5" />
                    <drawfilestl file="BW.stl" autofill="true" advanced="false">
					    <drawmove x="0" y="0" z="#Move_Z" />
                        <drawscale x="1" y="1" z="1" />
                    </drawfilestl>
                    <!-- Fluid -->
                    <setmkfluid mk="0" />
                    <fillbox x="5" y="0" z="1">
                        <modefill>void</modefill>
                        <point x="#tankx0" y="#-tanksy" z="-0.01" />
                        <size x="#tankx2-tankx0" y="#tanksy*2" z="10.21" comment="Depth is adjusted for 2dp" />
                    </fillbox>
                    <_shapeout file="" reset="true" />
                </mainlist>
            </commands>
        </geometry>
        <normals>
            <geometryfile file="[CaseName]_hdp_Actual.vtk" comment="File with boundary geometry (VTK format)" />
            <distanceh value="2.0" comment="Maximum distance (H*distanceh) to compute normals data (default=2)" />
            <svnormals value="1" comment="Saves VTK with particle normals according to <computenormals> for debug (default=0)" />
            <svshapes value="1" comment="Saves VTK with geometry in triangles and quads with its normals for debug (default=0)" />
        </normals>
        <motion>
            <objreal ref="10">
                <begin mov="1" start="0" />
                <mvnull id="1" />
            </objreal>
        </motion>
    </casedef>
    <execution>
        <special>
            <initialize>
                <boundnormal_plane mkbound="10">
					<point auto="true" comment="Point is calculated automatically accoding to normal configuration." />
                    <normal x="1" y="0" z="0" />
                    <maxdisth v="0" comment="Maximum distance to boundary limit. It uses H*maxdisth (default=2)" />
                </boundnormal_plane>
            </initialize>
            <wavepaddles>
                <piston>
                    <mkbound value="10" comment="Mk-Bound of selected particles" />
					<!-- ################ -->
                    <waveorder value="2" comment="Order wave generation 1:1st order, 2:2nd order (def=1)" />
                    <start value="0" comment="Start time (def=0)" />
                    <duration value="0" comment="Movement duration, Zero is the end of simulation (def=0)" />
                    <depth value="10" comment="Fluid depth (def=0)" />
                    <pistondir x="1" y="0" z="0" comment="Movement direction (def=(1,0,0))" />
                    <waveheight value="#Wave_Height" comment="Wave height" />
                    <waveperiod value="#Wave_Period" comment="Wave period" />
                    <phase value="0" comment="Initial wave phase in function of PI (def=0)" />
                    <ramp value="1" comment="Periods of ramp (def=0)" />
                    <savemotion xpos="2.2" zpos="-0.10" comment="Saves motion data. xpos and zpos are optional. zpos=-depth of the measuring point" />
					<awas_zsurf>
                        <startawas value="5" comment="Time to start AWAS correction (def=ramp*waveperiod)" />
                        <swl value="10" comment="Still water level (free-surface water)" />
                        <elevation value="2" comment="Order wave to calculate elevation 1:1st order, 2:2nd order (def=2)" />
                        <!-- gaugex valueh="5*#AWS_DP" comment="Position in X from piston to measure free-surface water (def=5*Dp)" -->
                        <gaugey value="0" comment="Position in Y to measure free-surface water" />
                        <gaugezmin value="4" comment="Minimum position in Z to measure free-surface water, it must be in water (def=domain limits)" />
                        <gaugezmax value="20" comment="Maximum position in Z to measure free-surface water (def=domain limits)" />
                        <gaugedp value="0.1" comment="Resolution to measure free-surface water, it uses Dp*gaugedp (def=0.1)" />
                        <coefmasslimit value="0.5" comment="Coefficient to calculate mass of free-surface (def=0.5 on 3D and 0.4 on 2D)" />
                        <savedata value="1" comment="Saves CSV with information 1:by part, 2:more info 3:by step (def=0)" />
                        <limitace value="2" comment="Factor to limit maximum value of acceleration, with 0 disabled (def=2)" />
                        <_correction coefstroke="1.8" coefperiod="1" powerfunc="3" comment="Drift correction configuration (def=no applied)" />
                    </awas_zsurf>
                </piston>
            </wavepaddles>
        </special>
        <parameters>
            <parameter key="SavePosDouble" value="0" comment="Saves particle position using double precision (default=0)" />
            <parameter key="Boundary" value="1" comment="Boundary method 1:DBC, 2:mDBC (default=1)" />
            <parameter key="StepAlgorithm" value="2" comment="Step Algorithm 1:Verlet, 2:Symplectic (default=1)" />
            <parameter key="VerletSteps" value="40" comment="Verlet only: Number of steps to apply Euler timestepping (default=40)" />
            <parameter key="Kernel" value="2" comment="Interaction Kernel 1:Cubic Spline, 2:Wendland (default=2)" />
            <parameter key="ViscoTreatment" value="1" comment="Viscosity formulation 1:Artificial, 2:Laminar+SPS (default=1)" />
            <parameter key="Visco" value="0.01" comment="Viscosity value" />
            <parameter key="ViscoBoundFactor" value="0" comment="Multiply viscosity value with boundary (default=1)" />
            <parameter key="DensityDT" value="2" comment="Density Diffusion Term 0:None, 1:Molteni, 2:Fourtakas, 3:Fourtakas(full) (default=0)" />
            <parameter key="DensityDTvalue" value="0.1" comment="DDT value (default=0.1)" />
            <parameter key="Shifting" value="0" comment="Shifting mode 0:None, 1:Ignore bound, 2:Ignore fixed, 3:Full (default=0)" />
            <parameter key="ShiftCoef" value="-2" comment="Coefficient for shifting computation (default=-2)" />
            <parameter key="ShiftTFS" value="0" comment="Threshold to detect free surface. Typically 1.5 for 2D and 2.75 for 3D (default=0)" />
            <parameter key="RigidAlgorithm" value="1" comment="Rigid Algorithm 0:collision-free, 1:SPH, 2:DEM, 3:Chrono (default=1)" />
            <parameter key="FtPause" value="0.0" comment="Time to freeze the floatings at simulation start (warmup) (default=0)" units_comment="seconds" />
            <parameter key="CoefDtMin" value="0.05" comment="Coefficient to calculate minimum time step dtmin=coefdtmin*h/speedsound (default=0.05)" />
            <parameter key="DtIni" value="0" comment="Initial time step. Use 0 to defult use (default=h/speedsound)" units_comment="seconds" />
            <parameter key="DtMin" value="0" comment="Minimum time step. Use 0 to defult use (default=coefdtmin*h/speedsound)" units_comment="seconds" />
            <parameter key="DtFixed" value="0" comment="Fixed Dt value. Use 0 to disable (default=disabled)" units_comment="seconds" />
            <parameter key="DtFixedFile" value="NONE" comment="Dt values are loaded from file. Use NONE to disable (default=disabled)" units_comment="milliseconds (ms)" />
            <parameter key="DtAllParticles" value="0" comment="Velocity of particles used to calculate DT. 1:All, 0:Only fluid/floating (default=0)" />
            <parameter key="TimeMax" value="60" comment="Time of simulation" units_comment="seconds" />
            <parameter key="TimeOut" value="0.05" comment="Time out data" units_comment="seconds" />
            <parameter key="PartsOutMax" value="1" comment="%/100 of fluid particles allowed to be excluded from domain (default=1)" units_comment="decimal" />
            <parameter key="RhopOutMin" value="700" comment="Minimum rhop valid (default=700)" units_comment="kg/m^3" />
            <parameter key="RhopOutMax" value="1300" comment="Maximum rhop valid (default=1300)" units_comment="kg/m^3" />
            <simulationdomain comment="Defines domain of simulation (default=Uses minimun and maximum position of the generated particles)">
                <posmin x="default" y="default" z="default" comment="e.g.: x=0.5, y=default-1, z=default-10%" />
                <posmax x="default" y="default" z="default" />
            </simulationdomain>
        </parameters>
    </execution>
</case>